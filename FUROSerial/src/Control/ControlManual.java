/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlManual.java
 *
 * Created on 27/09/2011, 12:56:02 AM
 */

package Control;

import Serial.rxtx;
import Serial.rxtx.SerialWriter;
import com.centralnexus.input.Joystick;
import com.centralnexus.input.JoystickListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Leandro Liu
 */
public class ControlManual extends javax.swing.JFrame
 implements Runnable, JoystickListener, ActionListener
{

    private Joystick joy;
    private Joystick joy2;


    private rxtx serial;
    private SerialWriter sw;
    private int mode=0;
    private inercialControl iC;
    private boolean keyed=false;
    private char lastKey;
    private char topSpeed;
    private char minSpeed;
    private char d;
    
    private Thread thread;
    private int joyButtonsold=0;
    private int joy2Buttonsold=0;
    
    /** Creates new form ControlManual */
    public ControlManual() throws InterruptedException, IOException {
        initComponents();
        thread = new Thread(this);
        
        DefaultCaret caret = (DefaultCaret)ConsolaTxt.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        iC=new inercialControl();
  
        joy = Joystick.createInstance();
        for (int idx = joy.getID() + 1; idx < Joystick.getNumDevices(); idx++) {
            if (Joystick.isPluggedIn(idx)) {
                joy2 = Joystick.createInstance(idx);
            }
        }
        if (joy2 == null) {
            joy2 = joy;
        }

        
/*        while(true){
            Thread.sleep(50);
            if(!keyed)
            iC.updateLow();
            else
                switch(lastKey){
                    case 'w':
                        iC.addSpeed();
                        break;
                    case 'a':
                        iC.addLSpeed();
                        break;
                    case 's':
                        iC.subSpeed();
                        break;
                    case 'd':
                        iC.addRSpeed();
                        break;

                }
           if(mode==1){
               sw.send("k");
               sw.send(Byte.toString(iC.LSpeed));
               sw.send(Byte.toString(iC.RSpeed));
           }
        }*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnDirecto = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BtnFija = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TxtObjetivo = new javax.swing.JTextField();
        TxtVelocidad = new javax.swing.JTextField();
        TxtAceleracion = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        BtnInercial = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        connectBtn = new javax.swing.JButton();
        portTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConsolaTxt = new javax.swing.JTextArea();
        manualTxt = new javax.swing.JTextField();
        sendBtn = new javax.swing.JButton();
        sValBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Control Manual"));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Modo Directo"));

        jLabel1.setText("Directo");

        BtnDirecto.setText("Activar");
        BtnDirecto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnDirectoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(BtnDirecto)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(BtnDirecto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Velocidad Fija"));

        jLabel2.setText("Fija");

        BtnFija.setText("Activar");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnFija)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(BtnFija))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        jLabel3.setText("Rbt Objetivo");

        jLabel4.setText("Velocidad");

        jLabel5.setText("Aceleracion");

        TxtObjetivo.setText("1");

        TxtVelocidad.setText("127");
        TxtVelocidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtVelocidadKeyPressed(evt);
            }
        });

        TxtAceleracion.setText("10");
        TxtAceleracion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtAceleracionKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TxtAceleracion, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(TxtVelocidad, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(TxtObjetivo, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TxtObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TxtVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TxtAceleracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Modo Inercial"));

        jLabel6.setText("Inercial");

        BtnInercial.setText("Activar");
        BtnInercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInercialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(BtnInercial)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(BtnInercial))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Serial"));

        connectBtn.setText("Connect");
        connectBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectBtnMouseClicked(evt);
            }
        });
        connectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBtnActionPerformed(evt);
            }
        });

        portTxt.setText("COM16");
        portTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTxtActionPerformed(evt);
            }
        });

        jLabel7.setText("PORT");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(connectBtn)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectBtn)
                    .addComponent(portTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Consola"));

        ConsolaTxt.setColumns(20);
        ConsolaTxt.setRows(5);
        jScrollPane1.setViewportView(ConsolaTxt);

        manualTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                manualTxtKeyTyped(evt);
            }
        });

        sendBtn.setText("send");
        sendBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendBtnMouseClicked(evt);
            }
        });
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        sValBtn.setText("Send Val");
        sValBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sValBtnMouseClicked(evt);
            }
        });
        sValBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sValBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(manualTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sendBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sValBtn)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manualTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sValBtn)
                    .addComponent(sendBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnInercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInercialActionPerformed
        // TODO add your handling code here:
         System.out.println("hola");
}//GEN-LAST:event_BtnInercialActionPerformed

    private void connectBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectBtnMouseClicked

        serial=new rxtx();
        try {
            serial.connect(portTxt.getText(),this);
        } catch (Exception ex) {
            Logger.getLogger(ControlManual.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_connectBtnMouseClicked

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBtnActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_connectBtnActionPerformed

    private void sendBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendBtnMouseClicked
        if(sw!=null){
        sw.send(manualTxt.getText());
        manualTxt.setText("");
        }else{
            System.out.println("Err: no hay serial Writer");
        }
    }//GEN-LAST:event_sendBtnMouseClicked

    private void BtnDirectoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnDirectoMouseClicked
        if(this.mode==1){
            this.BtnDirecto.setText("Activar");
            this.mode=0;
        }else{
            this.BtnDirecto.setText("Desactivar");
            this.mode=1;
        }
    }//GEN-LAST:event_BtnDirectoMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       System.out.println("formKeyPressed");
        this.keyed=true;
       
       this.lastKey=evt.getKeyChar();
       System.out.println(mode);

        if(this.mode==1){
            System.out.println("sendKey");
            char key;
            key=evt.getKeyChar();
            char s=this.topSpeed;
            char m=this.minSpeed;
            
            switch(key){
                case 'w':
                    d=1;
                    sw.send("k");
     
                    sw.send("A");
                    sw.send("A");                                      
                    sw.send(Character.toString(d));
                    break;
                case 'a':
                    //envia izq
                    
                    sw.send("k");
                   // sw.send("g");
                    sw.send(Character.toString(m));                    
                    sw.send(Character.toString(s));                    
                    sw.send(Character.toString(d));
                    break;
                case 'd':
                    //envia der
                    
                    sw.send("k");
                   // sw.send("g");
                    sw.send(Character.toString(s));
                    
                    sw.send(Character.toString(m));
                    
                    sw.send(Character.toString(d));
                    break;
                case 's':
                    d=0;
                    sw.send("k");
                    
                 //   sw.send("g");
                    sw.send(Character.toString(s));
                    sw.send(Character.toString(s));
                    
                    sw.send(Character.toString(s));
                    break;
            }
            

        }
    }//GEN-LAST:event_formKeyPressed

    private void manualTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manualTxtKeyTyped
        /*
        switch(mode){
            case 1:
                switch(evt.getKeyChar()){
                    case 'w':
                        //add speed
                    case 'a':
                        //add left
                    case 's':
                        //add back
                    case 'd':
                        //add ight
                    case 'p':
                        //brake
                }
                String msg=Character.toString(evt.getKeyChar());

                sw.send(msg);
                manualTxt.setText("");
        }
        */
        this.keyed=true;
       this.lastKey=evt.getKeyChar();
       System.out.println(mode);
        if(this.mode==1){
            System.out.println("sendKey");
            char key;
            key=evt.getKeyChar();
            char s=this.topSpeed;
            char m=this.minSpeed;
            switch(key){
                case 't':
                    d=1;
                    //s=48;
                    sw.send("t");
                    //sw.send(Character.toString(s));
                    //sw.send(Character.toString(s));
                    
                    //sw.send(Character.toString(d));
                    break;
                case 'f':
                    //envia izq
                    
                    sw.send("f");
                   // sw.send(Character.toString(m));
                    //s=48;
                    
                    //sw.send(Character.toString(s));
                    
                   // sw.send(Character.toString(d));
                    break;
                case 'h':
                    //envia der
                    //s=48;
                    
                    sw.send("h");
                    //sw.send(Character.toString(s));
                    
                   // sw.send(Character.toString(m));
                    
                    //sw.send(Character.toString(d));
                    break;
                case 'g':
                    //s=48;
                    d=0;
                    sw.send("g");
                    break;
                    //sw.send(Character.toString(s));
                    //sw.send(Character.toString(s));
                    
                    //sw.send(Character.toString(d));
                  case 'i':
                    d=1;
                    //s=48;
                    sw.send("i");
                    //sw.send(Character.toString(s));
                    //sw.send(Character.toString(s));
                    
                    //sw.send(Character.toString(d));
                    break;
                case 'j':
                    //envia izq
                    
                    sw.send("j");
                   // sw.send(Character.toString(m));
                    //s=48;
                    
                    //sw.send(Character.toString(s));
                    
                   // sw.send(Character.toString(d));
                    break;
                case 'k':
                    //envia der
                    //s=48;
                    
                    sw.send("m");
                    //sw.send(Character.toString(s));
                    
                   // sw.send(Character.toString(m));
                    
                    //sw.send(Character.toString(d));
                    break;
                case 'l':
                    //s=48;
                    d=0;
                    sw.send("l");
                    break;
                    //sw.send(Character.toString(s));
                    //sw.send(Character.toString(s));
                    
                    //sw.send(Character.toString(d));
                case 'p':
                    sw.send("s");
                    break;
                case 'w':
                    sw.send("z");
                    break;
                case 'a':
                    sw.send("x");
                    break;
                case 's':
                    sw.send("c");
                    break;
                case 'd':
                    sw.send("v");
                    break;
            }
        }
    }//GEN-LAST:event_manualTxtKeyTyped

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendBtnActionPerformed

    private void sValBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sValBtnMouseClicked
        if(sw!=null){
            //char a=100;
            //a+=100;
            //System.out.println(Character.toString((char) Integer.parseInt(manualTxt.getText())));
            int a=Integer.parseInt(manualTxt.getText());
            String s;
            if(a>127){
                //System.out.println(a);
                char b=(char)(a-128);
                b+=128;
                s=Character.toString(b);
                //System.out.println("**********");
                System.out.println(s.length());
//                System.out.println(Integer.parseInt(Character.toString(b)));
            }else{
                s=Character.toString((char) a);
            }
        sw.send(s);
            System.out.println(s.getBytes());
        manualTxt.setText("");
        }else{
            System.out.println("Err: no hay serial Writer");
        }
    }//GEN-LAST:event_sValBtnMouseClicked

    private void portTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portTxtActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        this.keyed=false;
            System.out.println("formKeyReleased");
        
    }//GEN-LAST:event_formKeyReleased

    private void TxtVelocidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtVelocidadKeyPressed
        if((this.TxtVelocidad.getText()).length()>0)
        this.topSpeed= (char)Integer.parseInt(TxtVelocidad.getText());
    }//GEN-LAST:event_TxtVelocidadKeyPressed

    private void TxtAceleracionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAceleracionKeyPressed
        if((this.TxtAceleracion.getText()).length()>0)
        this.minSpeed=(char)Integer.parseInt(TxtAceleracion.getText());
    }//GEN-LAST:event_TxtAceleracionKeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void sValBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sValBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sValBtnActionPerformed

    public void dataReceived(String msg){
        ConsolaTxt.append(msg);

    }
    public void setOutput(SerialWriter sw){
        this.sw=sw;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    ControlManual mainFrame=new ControlManual();
                    mainFrame.setVisible(true);
                    mainFrame.startPolling();
                } catch (InterruptedException ex) {
                    Logger.getLogger(ControlManual.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(ControlManual.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDirecto;
    private javax.swing.JButton BtnFija;
    private javax.swing.JButton BtnInercial;
    private javax.swing.JTextArea ConsolaTxt;
    private javax.swing.JTextField TxtAceleracion;
    private javax.swing.JTextField TxtObjetivo;
    private javax.swing.JTextField TxtVelocidad;
    private javax.swing.JButton connectBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField manualTxt;
    private javax.swing.JTextField portTxt;
    private javax.swing.JButton sValBtn;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables

   
    public void joystickAxisChanged(Joystick j) {
//        System.out.println(j.toString());
System.out.println("XX"+j.getButtons());
        if (j == joy) {
            updateFieldsEx(j);
        }
        else {
            updateFields(j);
        }
    }

    public void joystickButtonChanged(Joystick j) {
System.out.println("YY"+j.getButtons());

        if (j == joy) {
            updateFieldsEx(j);
        }
        else {
            updateFields(j);
        }
    }

       public void actionPerformed(ActionEvent e) {
//        System.out.println(e);
     //   if (e.getSource() == addButton) {
            joy.addJoystickListener(this);
      //      joy2.addJoystickListener(this);
      //  }
      //  else {
     //       joy.removeJoystickListener(this);
     //       joy2.removeJoystickListener(this);
       // }
    }
  public void updateFields(Joystick joystick) {
      
     //   button2Label.setText(Integer.toHexString(joystick.getButtons()));
     //   xyLabel.setText(joystick.getX() + ", " + joystick.getY());
      
       int joy2Buttons=joystick.getButtons();
       
       
       if(joy2Buttonsold!=joy2Buttons){
           joy2Buttonsold=joy2Buttons;
           System.out.println("Fields_ "+Integer.toHexString(joystick.getButtons()));
           
           //sw.send(Character.toString((char) 0));
           switch(joy2Buttonsold){
               case 1:sw.send("q");break;
               case 2:sw.send("n");break;
               case 4:sw.send("e");break;
               case 8:sw.send("b");break;
               /*case 1:sw.send("z");break;
               case 2:sw.send("x");break;
               case 4:sw.send("c");break;
               case 8:sw.send("v");break;*/
               case 16:sw.send("s");break;
           }
           
       }
      
      
    }

    public void updateFieldsEx(Joystick joystick) {
        
       int joyButtons=joystick.getButtons();
       
       
       if(joyButtonsold!=joyButtons){
           joyButtonsold=joyButtons;
           System.out.println("FieldsEx_ "+Integer.toHexString(joystick.getButtons()));
            byte a=(byte)joy2Buttonsold;
             
           sw.send((byte)0x0 );
           sw.send(a );

          // sw.send(Character.toString((char) joyButtonsold));
      /*     switch(joyButtonsold){
               /*case 1:sw.send("q");break;
               case 2:sw.send("n");break;
               case 4:sw.send("e");break;
               case 8:sw.send("b");break;* /
               case 1:sw.send("z");break;
               case 2:sw.send("x");break;
               case 4:sw.send("c");break;
               case 8:sw.send("v");break;
               case 16:sw.send("s");break;
           }*/
           
       }
       /* buttonLabel.setText(Integer.toHexString(joystick.getButtons()));
        xLabel.setText(Double.toString(joystick.getX()));
        yLabel.setText(Double.toString(joystick.getY()));
        zLabel.setText(Double.toString(joystick.getZ()));
        rLabel.setText(Double.toString(joystick.getR()));
        uLabel.setText(Double.toString(joystick.getU()));
        vLabel.setText(Double.toString(joystick.getV()));
        povLabel.setText(Double.toString(joystick.getPOV()));*/
    }
     public void startPolling() {
        thread.start();
       // this.run();
        
    }

    public void run() {
        for (;;) {
            joy.poll();
            joy2.poll();

            updateFieldsEx(joy);
            updateFields(joy2);
            try {
                Thread.sleep(50);
            } catch(InterruptedException e) {
                break;
            }
        }
    }
}
